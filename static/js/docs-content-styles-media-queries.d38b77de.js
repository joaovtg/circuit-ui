(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{"./docs/content/styles/components/MediaQueriesTable.js":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=m(t("./node_modules/react/index.js")),o=t("./node_modules/emotion-theming/dist/index.esm.js"),s=t("./src/themes/index.js"),r=m(t("./src/components/Table/index.js"));function m(e){return e&&e.__esModule?e:{default:e}}var i=["Breakpoint name","Query"],p=(0,o.withTheme)(function(e){var n=e.theme;return a.default.createElement(r.default,{headers:i,rows:Object.keys(n.breakpoints).map(function(e){return[e,function(e){return"number"===typeof e?"(min-width: "+e.toString()+"px)":e}(n.breakpoints[e])]})})}),c=function(){return a.default.createElement(o.ThemeProvider,{theme:s.circuit},a.default.createElement(p,null))};n.default=c,c.__docgenInfo={description:"",methods:[],displayName:"MediaQueriesTable"}},"./docs/content/styles/media-queries.mdx":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=r(t("./node_modules/react/index.js")),o=t("./node_modules/@mdx-js/tag/dist/index.js"),s=(t("./docs/utils/Wrapper.js"),r(t("./src/components/Table/index.js")),r(t("./docs/content/styles/components/MediaQueriesTable.js")));function r(e){return e&&e.__esModule?e:{default:e}}n.default=function(e){var n=e.components;!function(e,n){var t={};for(var a in e)n.indexOf(a)>=0||Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a])}(e,["components"]);return a.default.createElement(o.MDXTag,{name:"wrapper",components:n},a.default.createElement(o.MDXTag,{name:"h1",components:n,props:{id:"media-queries"}},a.default.createElement(o.MDXTag,{name:"a",components:n,parentName:"h1",props:{"aria-hidden":!0,href:"#media-queries"}},a.default.createElement(o.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Media queries"),a.default.createElement(o.MDXTag,{name:"p",components:n},"To use the media query utilities provided by Circuit themes, you'll use a\nfunction provided by the theme called ",a.default.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"theme.mq"),"."),a.default.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"usage-in-code"}},a.default.createElement(o.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#usage-in-code"}},a.default.createElement(o.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Usage in code"),a.default.createElement(o.MDXTag,{name:"pre",components:n},a.default.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"import styled, { css } from 'react-emotion';\n\nconst ResponsiveDiv = styled('div')`\n  ${({ theme }) => css`\n    ${theme.mq.mega`\n      padding-top: ${theme.spacings.peta};\n    `};    \n  `};\n`;\n")),a.default.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"breakpoints"}},a.default.createElement(o.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#breakpoints"}},a.default.createElement(o.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Breakpoints"),a.default.createElement(o.MDXTag,{name:"p",components:n},"You can use the following breakpoints when implementing either components\ninside Circuit UI or writing code that should be theme-compliant in your app."),a.default.createElement(s.default,null),a.default.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"responsive-best-practices"}},a.default.createElement(o.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#responsive-best-practices"}},a.default.createElement(o.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Responsive best practices"),a.default.createElement(o.MDXTag,{name:"ul",components:n},a.default.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"Do not refer directly to ",a.default.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"theme.breakpoints"),", but instead use the named\nmedia query helpers.")))}}}]);